// SCRIPT PARA GERAR AS MÁSCARAS DE DESMATAMENTO E REGENERAÇÃO A PARTIR DE UMA COLEÇÃO DO MAPBIOMAS
// PRIMEIRO PASSO PARA O MÉTODO DE CÁLCULOS DO SEEG, SETOR MUT

////////////////////////////////////////////////////////////////////////////////////////
// Organização responsável: IPAM (Instituto de Pesquisa Ambiental da Amazônia)
// Criado por: Felipe Lenti e Bárbara Zimbres (barbara.zimbres@ipam.org.br)
// Citação: referenciar o SEEG/Observatório do Clima e o IPAM ao usar esse script
////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////////////
//GERAR AS MASCARAS DE REGENERAÇÃO COM A COLEÇÃO DO MAPBIOMAS (exemplo com a coleção 5.0)

//Carregar uma Feature Collection da área de interesse (no caso, todos os biomas do Brasil)
//SEMA RS: vocês não devem ter acesso a esse Asset, carreguem um shapefile do estado do RS para chamar aqui
var Bioma = ee.FeatureCollection("users/SEEGMapBiomas/bioma_1milhao_uf2015_250mil_IBGE_geo_v4_revisao_pampa_lagoas"); 

//Carregar a coleção do Mapbiomas
//SEMA RS: vocês não devem ter acesso a esse Asset, carreguem a coleção do Mapbiomas que vocês baixaram para chamar aqui (pode ser recortada para o RS já ou deixar para recortar aqui)
var colecao5 = ee.ImageCollection("projects/mapbiomas-workspace/COLECAO5/mapbiomas-collection50-integration-v8").mosaic();

//Reclassifica tudo o que for vegetação nativa em 1985 para 1; o que for antrópico, para 0; e o que não se aplica, para 9
//ATENÇÃO SAIU CLASSE 19
var col5floresta85 = colecao5.select('classification_1985').remap(
                  [3, 4, 5, 11, 12, 13, 9,15,20,21,23,24,25,27, 29, 30, 31, 32, 33,36,39,40,41,42,43,44,45],
                  [1, 1, 1,  1,  1,  1, 0, 0, 0, 0, 9, 0, 0, 9,  9,  0,  0,  9,  9, 0, 0, 0, 0, 0, 0, 0, 0]);
//Muda o nome da banda
col5floresta85 = col5floresta85.select([0],['regen1985']).int8();

var anos = ['1985','1986','1987','1988','1989','1990','1991','1992','1993','1994','1995','1996','1997','1998','1999','2000','2001','2002','2003','2004','2005','2006','2007','2008','2009','2010','2011','2012','2013','2014','2015','2016','2017','2018','2019'];

//Completa fazendo a mesma coisa para os demais anos
for (var i_ano=0;i_ano<anos.length; i_ano++){ /////nao tá em roxo length
  var ano = anos[i_ano];

  var col5flor = colecao5.select('classification_'+ano).remap(
                  [3, 4, 5, 11, 12, 13, 9,15,20,21,23,24,25,27, 29, 30, 31, 32, 33,36,39,40,41,42,43,44,45],
                  [1, 1, 1,  1,  1,  1, 0, 0, 0, 0, 9, 0, 0, 9,  9,  0,  0,  9,  9, 0, 0, 0, 0, 0, 0, 0, 0]);
                    
  col5floresta85 = col5floresta85.addBands(col5flor.select([0],['regen'+ano])).int8();
}

//Gera a função que aplica a regra geral do filtro temporal (3 anos antes e 2 depois da transição)
var geraMask3_3 = function(ano){
  var mask =  col5floresta85.select('regen'+(ano - 3)).eq(0)
              .and(col5floresta85.select('regen'+(ano - 2)).eq(0))
              .and(col5floresta85.select('regen'+(ano - 1)).eq(0))
              .and(col5floresta85.select('regen'+(ano    )).eq(1))
              .and(col5floresta85.select('regen'+(ano + 1)).eq(1))
              .and(col5floresta85.select('regen'+(ano + 2)).eq(1));
  mask = mask.mask(mask.eq(1));
  return mask;
};

//Aplica as exceções das regras nos dois primeiros (1986 e 1987) e dois últimos anos (2017 e 2018) da série temporal
var imageZero = ee.Image(0);
  var mask86 =  col5floresta85.select('regen'+(1986 - 1)).eq(0)
              .and(col5floresta85.select('regen'+(1986    )).eq(1))
              .and(col5floresta85.select('regen'+(1986 + 1)).eq(1))
              .and(col5floresta85.select('regen'+(1986 + 2)).eq(1))
              .and(col5floresta85.select('regen'+(1986 + 3)).eq(1))
              .and(col5floresta85.select('regen'+(1986 + 4)).eq(1))
              .and(col5floresta85.select('regen'+(1986 + 5)).eq(1))
              .and(col5floresta85.select('regen'+(1986 + 6)).eq(1))
              .and(col5floresta85.select('regen'+(1986 + 7)).eq(1))
              .and(col5floresta85.select('regen'+(1986 + 8)).eq(1));
              
  mask86 = mask86.mask(mask86.eq(1));
  mask86 = mask86.unmask(imageZero);  
  mask86 = mask86.updateMask(mask86.neq(0));
  mask86 = mask86.select([0], ['regen1986']);

  var mask87 =  col5floresta85.select('regen'+(1987 - 2)).eq(0)
              .and(col5floresta85.select('regen'+(1987 - 1)).eq(0))
              .and(col5floresta85.select('regen'+(1987    )).eq(1))
              .and(col5floresta85.select('regen'+(1987 + 1)).eq(1))
              .and(col5floresta85.select('regen'+(1987 + 2)).eq(1))
              .and(col5floresta85.select('regen'+(1987 + 3)).eq(1))
              .and(col5floresta85.select('regen'+(1987 + 4)).eq(1));

  mask87 = mask87.mask(mask87.eq(1));
  mask87 = mask87.unmask(imageZero);  
  mask87 = mask87.updateMask(mask87.neq(0));
  mask87 = mask87.select([0], ['regen1987']);
  
  
  var mask18 =  col5floresta85.select('regen'+(2018 - 6)).eq(0)
            .and(col5floresta85.select('regen'+(2018 - 5)).eq(0))
            .and(col5floresta85.select('regen'+(2018 - 4)).eq(0))
            .and(col5floresta85.select('regen'+(2018 - 3)).eq(0))
            .and(col5floresta85.select('regen'+(2018 - 2)).eq(0))
            .and(col5floresta85.select('regen'+(2018 - 1)).eq(0))
            .and(col5floresta85.select('regen'+(2018    )).eq(1))
            .and(col5floresta85.select('regen'+(2018 + 1)).eq(1));
              
  mask18 = mask18.mask(mask18.eq(1));
  mask18 = mask18.unmask(imageZero);  
  mask18 = mask18.updateMask(mask18.neq(0));
  mask18 = mask18.select([0], ['regen2018']);
  
  var mask19 =  col5floresta85.select('regen'+(2019 - 8)).eq(0)
            .and(col5floresta85.select('regen'+(2019 - 7)).eq(0))
            .and(col5floresta85.select('regen'+(2019 - 6)).eq(0))
            .and(col5floresta85.select('regen'+(2019 - 5)).eq(0))
            .and(col5floresta85.select('regen'+(2019 - 4)).eq(0))
            .and(col5floresta85.select('regen'+(2019 - 3)).eq(0))
            .and(col5floresta85.select('regen'+(2019 - 2)).eq(0))             
            .and(col5floresta85.select('regen'+(2019 - 1)).eq(0))
            .and(col5floresta85.select('regen'+(2019    )).eq(1));
              
  mask19 = mask19.mask(mask19.eq(1));
  mask19 = mask19.unmask(imageZero);  
  mask19 = mask19.updateMask(mask19.neq(0));
  mask19 = mask19.select([0], ['regen2019']);

//Soma as bandas dos dois primeiros anos
var regen = mask86.addBands(mask87);

//Cria uma banda do primeiro ano da regra geral
var regen88 = geraMask3_3(1988);
regen88 = regen88.unmask(imageZero);  
regen88 = regen88.updateMask(regen88.neq(0));
regen88 = regen88.select(['regen1985'],['regen1988']);

//Soma as bandas 
regen = regen.addBands(regen88);

//Gera as bandas aplicando o filtro para todos os demais anos da regra geral (no caso, até 2016)
for (var i = 1989; i < 2018; i++) {
   var regen_geral = geraMask3_3(i);
      regen_geral = regen_geral.unmask(imageZero);
      regen_geral = regen_geral.updateMask(regen_geral.neq(0));
  regen = regen.addBands(regen_geral.select([0],['regen'+ i]));
}

//Adiciona os dois últimos anos
regen = regen.addBands(mask18).addBands(mask19);
print(regen);

Map.addLayer(regen.select('regen2018'), {'min': 0,'max': 1, 'palette': 'blue'},'Regen_2018');
Map.addLayer(regen.select('regen2019'), {'min': 0,'max': 1, 'palette': 'blue'},'Regen_2019');

  Export.image.toAsset({
    "image": regen.unmask(0).uint8(),
    "description": 'regenSEEGc5',
    "assetId": 'users/barbarazimbres/SEEG8_2020/regenSEEGc5', //inserir aqui o endereço e o nome do Asset a ser exportado
    "scale": 30,
    "pyramidingPolicy": {
        '.default': 'mode'
    },
    "maxPixels": 1e13,
    "region": Bioma.geometry().bounds() //alterar aqui para o nome da região usada
});    



//////////////////////////////////////////////////////////////////////////////////////////
//GERAR AS MASCARAS DE DESMATAMENTO COM A COLEÇÃO DO MAPBIOMAS (exemplo com a coleção 5.0)


//Reclassifica tudo o que for uso antrópico em 1985 para 1; o que for vegetação nativa, para 0; e o que não se aplica, para 9
var col5antrop85 = colecao5.select('classification_1985').remap(
                  [3, 4, 5, 11, 12, 13, 9,15,20,21,23,24,25,27, 29, 30, 31, 32, 33,36,39,40,41,42,43,44,45],
                  [0, 0, 0,  0,  0,  0, 1, 1, 1, 1, 9, 1, 1, 9,  9,  1,  1,  9,  9, 1, 1, 1, 1, 1, 1, 1, 1]);
//Muda o nome da banda
col5antrop85 = col5antrop85.select([0],['desmat1985']).int8();

//Completa fazendo a mesma coisa para os demais anos
for (var i_ano=0;i_ano<anos.length; i_ano++){
  var ano = anos[i_ano];

  var col5uso = colecao5.select('classification_'+ano).remap(
                  [3, 4, 5, 11, 12, 13, 9,15,20,21,23,24,25,27, 29, 30, 31, 32, 33,36,39,40,41,42,43,44,45],
                  [0, 0, 0,  0,  0,  0, 1, 1, 1, 1, 9, 1, 1, 9,  9,  1,  1,  9,  9, 1, 1, 1, 1, 1, 1, 1, 1]);
                    
  col5antrop85 = col5antrop85.addBands(col5uso.select([0],['desm'+ano])).int8();
}

//Gera a função que aplica a regra geral do filtro temporal (3 anos antes e 2 depois da transição)
var geraMask3_3 = function(ano){
  var mask =  col5antrop85.select('desm'+(ano - 3)).eq(0)
              .and(col5antrop85.select('desm'+(ano - 2)).eq(0))
              .and(col5antrop85.select('desm'+(ano - 1)).eq(0))
              .and(col5antrop85.select('desm'+(ano    )).eq(1))
              .and(col5antrop85.select('desm'+(ano + 1)).eq(1))
              .and(col5antrop85.select('desm'+(ano + 2)).eq(1));
  mask = mask.mask(mask.eq(1));
  return mask;
};

//Aplica as exceções das regras nos dois primeiros (1986 e 1987) e dois últimos anos (2017 e 2018) da série temporal
var mask86 =  col5antrop85.select('desm'+(1986 - 1)).eq(0)
              .and(col5antrop85.select('desm'+(1986    )).eq(1))
              .and(col5antrop85.select('desm'+(1986 + 1)).eq(1))
              .and(col5antrop85.select('desm'+(1986 + 2)).eq(1))
              .and(col5antrop85.select('desm'+(1986 + 3)).eq(1))
              .and(col5antrop85.select('desm'+(1986 + 4)).eq(1))
              .and(col5antrop85.select('desm'+(1986 + 5)).eq(1))
              .and(col5antrop85.select('desm'+(1986 + 6)).eq(1))
              .and(col5antrop85.select('desm'+(1986 + 7)).eq(1))
              .and(col5antrop85.select('desm'+(1986 + 8)).eq(1));
              
  mask86 = mask86.mask(mask86.eq(1));
  mask86 = mask86.unmask(imageZero);  
  mask86 = mask86.updateMask(mask86.neq(0));
  mask86 = mask86.select([0], ['desm1986']);

  var mask87 =  col5antrop85.select('desm'+(1987 - 2)).eq(0)
              .and(col5antrop85.select('desm'+(1987 - 1)).eq(0))
              .and(col5antrop85.select('desm'+(1987    )).eq(1))
              .and(col5antrop85.select('desm'+(1987 + 1)).eq(1))
              .and(col5antrop85.select('desm'+(1987 + 2)).eq(1))
              .and(col5antrop85.select('desm'+(1987 + 3)).eq(1))
              .and(col5antrop85.select('desm'+(1987 + 4)).eq(1));
              
  mask87 = mask87.mask(mask87.eq(1));
  mask87 = mask87.unmask(imageZero);  
  mask87 = mask87.updateMask(mask87.neq(0));
  mask87 = mask87.select([0], ['desm1987']);
  
  
  var mask18 =  col5antrop85.select('desm'+(2018 - 6)).eq(0)
            .and(col5antrop85.select('desm'+(2018 - 5)).eq(0))
            .and(col5antrop85.select('desm'+(2018 - 4)).eq(0))
            .and(col5antrop85.select('desm'+(2018 - 3)).eq(0))
            .and(col5antrop85.select('desm'+(2018 - 2)).eq(0))
            .and(col5antrop85.select('desm'+(2018 - 1)).eq(0))
            .and(col5antrop85.select('desm'+(2018    )).eq(1))
            .and(col5antrop85.select('desm'+(2018 + 1)).eq(1));
              
  mask18 = mask18.mask(mask18.eq(1));
  mask18 = mask18.unmask(imageZero);  
  mask18 = mask18.updateMask(mask18.neq(0));
  mask18 = mask18.select([0], ['desm2018']);
  
  var mask19 =  col5antrop85.select('desm'+(2019 - 8)).eq(0)
            .and(col5antrop85.select('desm'+(2019 - 7)).eq(0))
            .and(col5antrop85.select('desm'+(2019 - 6)).eq(0))
            .and(col5antrop85.select('desm'+(2019 - 5)).eq(0))
            .and(col5antrop85.select('desm'+(2019 - 4)).eq(0))
            .and(col5antrop85.select('desm'+(2019 - 3)).eq(0))
            .and(col5antrop85.select('desm'+(2019 - 2)).eq(0))             
            .and(col5antrop85.select('desm'+(2019 - 1)).eq(0))
            .and(col5antrop85.select('desm'+(2019    )).eq(1));
            
  mask19 = mask19.mask(mask19.eq(1));
  mask19 = mask19.unmask(imageZero);  
  mask19 = mask19.updateMask(mask19.neq(0));
  mask19 = mask19.select([0], ['desm2019']);

//Soma as bandas dos dois primeiros anos
var desm = mask86.addBands(mask87);

//Cria uma banda do primeiro ano da regra geral
var desm88 = geraMask3_3(1988);
desm88 = desm88.unmask(imageZero);  
desm88 = desm88.updateMask(desm88.neq(0));
desm88 = desm88.select(['desm1985'],['desm1988']);

//Soma as bandas
desm = desm.addBands(desm88);

//Gera as bandas aplicando o filtro para todos os demais anos da regra geral (no caso, até 2016)
for (var i = 1989; i < 2018; i++) {
 
  var desm_geral = geraMask3_3(i);
      desm_geral = desm_geral.unmask(imageZero);
      desm_geral = desm_geral.updateMask(desm_geral.neq(0));
  desm = desm.addBands(desm_geral.select([0],['desm'+ i]));
}

//Adiciona os dois últimos anos
desm = desm.addBands(mask18).addBands(mask19);
print(desm);

Map.addLayer(desm.select('desm2019'), {'min': 0,'max': 1, 'palette': 'red'},"Desm_2019");

  Export.image.toAsset({
    "image": desm.unmask(0).uint8(),
    "description": 'desmSEEGc5',
    "assetId": 'users/barbarazimbres/SEEG8_2020/desmSEEGc5', //inserir aqui o endereço e o nome do Asset a ser exportado
    "scale": 30,
    "pyramidingPolicy": {
        '.default': 'mode'
    },
    "maxPixels": 1e13,
    "region": Bioma.geometry().bounds() //alterar aqui para o nome da região usada
});    
